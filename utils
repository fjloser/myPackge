/**
 * @description 深克隆对象
 * @param {*} obj 
 * @returns 克隆对象
 */
function deepClone(obj) {
	return new Promise((resolve) => {
		const { port1, port2 } = new MessageChannel();
		port1.postMessage(obj);
		port2.onmessage = (msg) => {
			resolve(msg.data);
		};
	});
}
/**
 * @description 清除子节点数组
 * @param {*} obj 
 * @returns 新的树状数组
 */
function clearChildren(data) {
  if (data.length === 0) {
    return [];
  }
  return data.map((ele) => {
    if (ele.children && ele.children.length !== 0) {
      const children = clearChildren(ele.children);
      ele.children = children; // eslint-disable-line
      return ele;
    }
    return {
      value: ele.value,
      label: ele.label,
    };
  });
}
